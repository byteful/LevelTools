plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id("com.gradleup.shadow") version "9.0.0-beta13"
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }
    maven {
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }
    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }
    maven {
        url = uri('https://repo.codemc.org/repository/maven-public/')
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://redempt.dev')
    }
    maven {
        url = uri('https://jitpack.io')
    }
    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }
    maven {
        url = uri('https://hub.jeff-media.com/nexus/repository/jeff-media-public/')
    }
}

dependencies {
    implementation 'de.tr7zw:item-nbt-api:2.15.0'
    implementation 'com.github.Redempt:RedLib:6.6.1'
    implementation 'com.github.Redempt:Crunch:2.0.3'
    implementation 'com.github.cryptomorin:XSeries:13.2.0'
    implementation 'com.github.Revxrsal.Lamp:common:3.3.6'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.3.6'
    implementation 'com.github.Sven65:Item-Names:1.0.2'
    implementation 'org.bstats:bstats-bukkit:3.1.0'
    implementation 'com.jeff-media:MorePersistentDataTypes:2.4.0'

    compileOnly files('libs/folia-api-1.20.4-R0.1-SNAPSHOT.jar') // Modified API jar with Java 8 support
    compileOnly 'net.kyori:adventure-api:4.17.0' // Not used but needed for Folia compilation
    compileOnly 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:24.1.0'
    compileOnly 'me.clip:placeholderapi:2.11.6'
}

group = 'me.byteful.plugin'
version = '1.4.1'
description = 'LevelTools'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

shadowJar {
    minimize()
    archiveBaseName.set("LevelTools")
    archiveClassifier.set("")

    relocate "de.tr7zw.changeme.nbtapi", "me.byteful.plugin.leveltools.libs.nbtapi"
    relocate "com.cryptomorin.xseries", "me.byteful.plugin.leveltools.libs.xseries"
    relocate "redempt.redlib", "me.byteful.plugin.leveltools.libs.redlib"
    relocate 'revxrsal.commands', 'me.byteful.plugin.leveltools.libs.lamp'
    relocate 'org.bstats', 'me.byteful.plugin.leveltools.libs.bstats'
    relocate 'com.jeff-media.morepersistentdatatypes', 'me.byteful.plugin.leveltools.libs.morepersistentdatatypes'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = 17
    targetCompatibility = 8
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('*.yml') {
        expand props
    }
}

compileJava { // Preserve parameter names in the bytecode
    options.compilerArgs += ["-parameters"]
}
